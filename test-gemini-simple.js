require('dotenv').config();
const axios = require('axios');

console.log('üîç Probando clave Gemini...');
console.log('Clave:', process.env.GEMINI_API_KEY ? '‚úÖ Presente' : '‚ùå Faltante');

if (!process.env.GEMINI_API_KEY) {
    console.log('‚ùå ERROR: No hay clave GEMINI_API_KEY en .env');
    process.exit(1);
}

console.log('üåê Probando conexi√≥n con Gemini...');

axios.get(`https://generativelanguage.googleapis.com/v1/models?key=${process.env.GEMINI_API_KEY}`)
    .then(response => {
    console.log('‚úÖ Conexi√≥n exitosa con Gemini API');
    if (response.data.models) {
        // Extraemos solo los nombres de los modelos de la respuesta
        const modelNames = response.data.models.map(model => model.name);

        console.log('--- LISTA DE MODELOS DISPONIBLES PARA TU API KEY ---');
        console.log(modelNames);
        console.log('----------------------------------------------------');
        console.log('Por favor, revisa si "models/gemini-pro" est√° en esta lista.');

    } else {
        console.log('No se encontraron modelos.');
    }
})
    .catch(error => {
        console.log('‚ùå Error de conexi√≥n:');
        console.log('‚Ä¢ Mensaje:', error.message);
        console.log('‚Ä¢ C√≥digo:', error.code);
        console.log('‚Ä¢ Status:', error.response?.status);
        console.log('üîß Verifica:');
        console.log('1. Que la clave API sea correcta');
        console.log('2. Que la API Generative Language est√© habilitada');
        console.log('3. Que la clave tenga permisos suficientes');
    });